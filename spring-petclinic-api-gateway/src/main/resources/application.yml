server:
  port: 8080
  shutdown: graceful
  compression:
    enabled: true
    mime-types: application/json,text/css,application/javascript
    min-response-size: 2048

zuul:
  prefix: /api
  ignoredServices: '*'
  routes:
    vets-service: /vet/**
    visits-service: /visit/**
    customers-service: /customer/**
    api-gateway: /gateway/**

spring:
  application:
    name: api-gateway
  sql:
    init:
      schema-locations: classpath*:db/hsqldb/schema.sql
      data-locations: classpath*:db/hsqldb/data.sql
  sleuth:
    sampler:
      probability: 1.0
  jpa:
    open-in-view: false
    hibernate:
      ddl-auto: none
  zipkin:
    baseUrl: http://tracing-server:9411
  cloud:
    gateway:
      routes:
        - id: vets-service
          uri: lb://vets-service
          predicates:
            - Path=/api/vet/**
          filters:
            - StripPrefix=2
        - id: visits-service
          uri: lb://visits-service
          predicates:
            - Path=/api/visit/**
          filters:
            - StripPrefix=2
        - id: customers-service
          uri: lb://customers-service
          predicates:
            - Path=/api/customer/**
          filters:
            - StripPrefix=2

# Spring Boot 1.5 makes actuator secure by default
management.security.enabled: false
# Enable all Actuators and not only the two available by default /health and /info starting Spring Boot 2.0
management.endpoints.web.exposure.include: "*"

# Temporary hack required by the Spring Boot 2 / Spring Cloud Finchley branch
# Waiting issue https://github.com/spring-projects/spring-boot/issues/13042
# spring.cloud.refresh.refreshable: false

# Logging
logging.level.org.springframework: INFO

# Metrics
management:
  endpoint:
    metrics:
      enabled: true
    prometheus:
      enabled: true
  endpoints:
    web:
      exposure:
        include: '*'
  metrics:
    export:
      prometheus:
        enabled: true
  tracing:
    sampling:
      probability: 1

eureka:
  client:
    serviceUrl:
      defaultZone: http://discovery-server:8761/eureka/

---
spring:
  config:
    activate:
      on-profile: chaos-monkey      
management.endpoint.chaosmonkey.enabled: true
chaos:
  monkey:
    enabled: true
    watcher:
      component: false
      controller: false
      repository: false
      rest-controller: false
      service: false

---
spring:
  config:
    activate:
      on-profile: mysql
  datasource:
    url: jdbc:mysql://localhost:3306/petclinic?useSSL=false
    username: root
    password: petclinic
  sql:
    init:
      schema-locations: classpath*:db/mysql/schema.sql
      data-locations: classpath*:db/mysql/data.sql
      init: ALWAYS

